name: Build EXE

on:
  workflow_dispatch:
    inputs:
      python-version:
        description: "Python version to use (default: 3.12)"
        default: "3.12"
        required: false

jobs:
  build:
    runs-on: windows-latest
    env: # ジョブ全体の環境変数を定義
      POPPLER_VERSION: "24.08.0"

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read version from version.txt
        id: get_version
        shell: bash
        run: |
          VERSION=$(cat version.txt)
          echo "TOOL_VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Download Poppler
        shell: bash -l {0}
        run: |
          curl -L -o poppler.zip https://github.com/oschwartz10612/poppler-windows/releases/download/v${{env.POPPLER_VERSION}}-0/Release-${{env.POPPLER_VERSION}}-0.zip
          unzip poppler.zip -d poppler-mv
          mkdir "poppler"
          mv "./poppler-mv/poppler-${{env.POPPLER_VERSION}}/Library/" "./poppler/Library/"
          rm -rf "./poppler-mv"

      - name: Verify Poppler
        shell: bash -l {0}
        run: ./poppler/Library/bin/pdftocairo -v

      - name: Install Python and PyInstaller
        uses: actions/setup-python@v2
        with:
          python-version: '${{ inputs.python-version }}'

      - name: Create new Git tag
        shell: bash
        run: |
          git tag v${{ env.TOOL_VERSION }}
          git push origin v${{ env.TOOL_VERSION }}

      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build EXE
        run: pyinstaller pdf2imageconverter.spec

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.TOOL_VERSION }}
          release_name: PDF2ImageConverter v${{ env.TOOL_VERSION }}
          body: |
            ### RELEASE ${{ env.TOOL_VERSION }}
            - Version: v${{ env.TOOL_VERSION }}
          draft: false
          prerelease: false


      # DIST 配下の ZIP 生成物を動的アップロード
      - name: Find and Upload ZIP
        shell: bash
        run: |
          ZIP_FILE="dist/pdf2imageconverter-ver${{ env.TOOL_VERSION }}.zip"
          echo "zip_name=${ZIP_FILE}" >> $GITHUB_ENV

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dynamic-exe-zip
          path: ${{ env.zip_name }}

